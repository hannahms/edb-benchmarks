---
- hosts: primary
  name: Run DBT-7
  gather_facts: true

  collections:
    - edb_devops.edb_postgres

  tasks:
    - name: Load servers.yml
      ansible.builtin.include_vars:
        file: "{{ terraform_project_path }}/servers.yml"
        name: infra

    - name: Load infrastructure.yml
      ansible.builtin.include_vars:
        file: "../infrastructure.yml"
        name: structure

    - name: Make sure DBT-7 target results directory do not exist
      ansible.builtin.file:
        path: "/tmp/dbt7-data"
        state: absent
      become: true
      loop:

    - name: Drop database
      ansible.builtin.command:
        cmd: psql -c "DROP DATABASE IF EXISTS dbt7"
      become: true
      become_user: "{{ pg_owner }}"

    - name: Create database
      ansible.builtin.command:
        cmd: createdb dbt7
      become: true
      become_user: "{{ pg_owner }}"

    - name: Execute dbt7-run-workload
      ansible.builtin.command:
        cmd: >-
          dbt7 run
          --scale-factor={{ dbt7_scale_factor }}
          --stats
          --tpcdstools="{{ pg_user_home }}/DSGen-software-code-3.2.0rc1"
          --comment="AWS EC2 PostgreSQL
          {{ structure.aws.machines["postgres1"].instance_type }} |
          {{ structure.aws.machines["postgres1"].volume.size_gb }} GB
          {{ structure.aws.machines["postgres1"].volume.type }} |
          {{ structure.aws.machines["postgres1"].volume.iops }} IOPS"
          {% if tablespaces %}--tablespaces={{ dbt7tsdir }}{% endif %}
          pgsql
          /tmp/dbt7-data
      environment:
        DBT7DMPREFIX: "LOAD 'auto_explain'; SET auto_explain.log_min_duration TO 0; SET auto_explain.log_level TO notice;"
        PGDATABASE: "dbt7"
      become: true
      become_user: "{{ pg_owner }}"
      changed_when: false
      register: result

    - name: Workload execution output
      ansible.builtin.debug:
        var: result

    - name: Generate DBT-7 report
      ansible.builtin.command:
        cmd: dbt7 report /tmp/dbt7-data
      become: true
      become_user: "{{ pg_owner }}"
      changed_when: false
      register: result

    - name: Report generation output
      ansible.builtin.debug:
        var: result

    - name: Fetch DBT-7 results
      ansible.posix.synchronize:
        mode: pull
        src: "/tmp/dbt7-data"
        dest: "{{ results_directory }}/"
      become: true

    - name: Save system details
      ansible.builtin.include_role:
        name: get-system-details
